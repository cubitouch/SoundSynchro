<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - SoundSynchro</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="container body-content">
        <div class="row">
            <div class="col-sm-4">
                <ul id="sidemenu" class="nav nav-pills nav-stacked">
                    <li class="active">
                        @Html.ActionLink("SoundSynchro", "MusicList", "Home")
                    </li>
                    <li>@Html.ActionLink("Musics", "MusicList", "Home")</li>
                    <li>@Html.ActionLink("Playlists", "PlaylistList", "Home")</li>
                    <li>@Html.ActionLink("Storage", "StorageManagement", "Home")</li>
                </ul>
                <hr />
                <div class="input-group">
                    <input id="search" type="text" class="form-control" placeholder="Search">
                    <a id="searchButton" href="#" class="input-group-addon"><i class="glyphicon glyphicon-search"></i></a>
                </div>
                <hr />
                <div id="player" class="text-center img-thumbnail col-sm-12">
                    <img class="thumbnail" src="#" /><br />
                    <span class="title music-title"></span><br />
                    <audio class="audio" controls>
                        <source src="#" type="audio/mpeg" />
                    </audio><br />

                    <div class="btn-group" role="group" aria-label="...">
                        <a href="#" id="player-previous" class="btn btn-default"><i class="glyphicon glyphicon-backward"></i></a>
                        <a href="#" id="player-save-playlist" class="btn btn-default"><i class="glyphicon glyphicon-floppy-disk"></i></a>
                        <a href="#" id="player-next" class="btn btn-default"><i class="glyphicon glyphicon-forward"></i></a>
                    </div>
                    <br /><br />
                    <ul id="queue" class="nav nav-pills nav-stacked"></ul>
                </div>
            </div>
            <div id="content" class="col-sm-8">
                @RenderBody()
            </div>
        </div>
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - SoundSynchro</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script>
        $(function () {
            $('#searchButton').click(function () {
                var search = $('#search').val();

                $.get("@Url.Action("MusicSearch")?search=" + search, function (html) {
                    $('#content').html(html);
                    initMusicList();
                })
            });


            $('#sidemenu li a').click(function () {
                $.get($(this).attr('href'), function (html) {
                    $('#content').html(html);
                    initMusicList();
                    initPlaylistList();
                });
                return false;
            });
            initMusicList();

            function initPlaylistList() {
                $('#content [data-toggle="modal"]').click(function () {
                    $('#' + $(this).data('target')).modal();
                });
                $('.playlist-edit-modal .playlist-edit-save').click(function () {
                    var id = $(this).closest('.playlist-edit-modal').data('id');
                    var title = $(this).closest('.playlist-edit-modal').find('.playlistTitle').val();
                    var musics = [];

                    var selectedMusics = $(this).closest('.playlist-edit-modal').find(':checkbox:checked');
                    for (i = 0; i < selectedMusics.length; i++) {
                        musics.push({ id: $(selectedMusics[i]).data('id') });
                    }

                    $.post("@Url.Action("PlaylistUpdate")", { id: id, title: title, musics: musics }, function (html) {
                        $('#playlist-edit-' + id).on('hidden.bs.modal', function () {
                            $('.playlist-item[data-id="' + id + '"]').replaceWith(html);
                            initPlaylistList();
                        }).modal('hide');
                    });
                    return false;
                });
                $('.play-playlist-button').click(function () {
                    var id = $(this).closest('.playlist-item').data('id');

                    $.get("@Url.Action("PlaylistContent")?id=" + id, function (data) {
                        var musics = JSON.parse(data);
                        _currentQueue = musics;
                        playQueue(musics[0].id);
                    });
                });
            }

            $('#musicDelete').click(function () {
                $.post("@Url.Action("MusicDelete")", { id: $('#musicId').val() }, function (data) {
                    if (data == "True") {
                        $('.music-item[data-id="' + $('#musicId').val() + '"]').remove();
                        $('#musicEditor').modal('hide');
                        deleteFromQueue($('#musicId').val());
                    }
                });
                return false;
            });

            $('#musicUpdate').click(function () {
                $.post("@Url.Action("MusicUpdate")", {
                    id: $('#musicId').val(),
                    title: $('#musicTitle').val()
                }, function (data) {
                    if (data == "True") {
                        var musicItem = $('.music-item[data-id="' + $('#musicId').val() + '"]');
                        $(musicItem).find('.music-title').text($('#musicTitle').val());
                        $(musicItem).data('title', $('#musicTitle').val());
                        $('#musicEditor').modal('hide');
                        updateFromQueue($('#musicId').val(), $('#musicTitle').val());
                    }
                });
                return false;
            });
            $('#player .audio')[0].addEventListener("ended", function () {
                playNext();
            }, true);


            $('#player-previous').click(function () { playPrevious(); });
            $('#player-next').click(function () { playNext(); });

            $('#player-save-playlist').click(function () {
                $('#playlistTitle').val('');
                $('#playlistCreator').modal('show');
                return false;
            });

            $('#playlistSave').click(function () {
                var title = $('#playlistTitle').val();
                if (title.trim() != '') {
                    $.post("@Url.Action("PlaylistCreate")", { title: title, musics: _currentQueue }, function (data) {
                        if (data == "True") {
                            $('#playlistTitle').val('');
                            $('#playlistCreator').modal('hide');
                        }
                    });
                }
                return false;
            });
        });

        var _currentQueue = [];
        var _currentId = "";
        function renderMusicList() {
            $('.music-item').each(function (i, el) {
                if ($(el).data("id") == _currentId) {
                    $(el).addClass('bg-primary');
                    $(el).find('.play-button').html('<i class="glyphicon glyphicon-pause"></i>');
                } else {
                    $(el).removeClass('bg-primary');
                    $(el).find('.play-button').html('<i class="glyphicon glyphicon-play"></i>');
                }
            });

            renderQueue();
        }
        function renderQueue() {
            console.log('---renderQueue---');
            $('#queue').empty();
            for (i = 0; i < _currentQueue.length  ; i++) {
                console.log(_currentQueue[i].title);
                $('#queue').append($('<li class="' + (_currentQueue[i].id == _currentId ? "active" : "") + '"><a href="#" class="music-queue-item" data-id="' + _currentQueue[i].id + '">' + _currentQueue[i].title + '</a></li>'));
            }

            $('.music-queue-item').click(function () {
                playQueue($(this).data('id'));
            });
        }


        function initMusicList() {
            $("#play-all").click(function () {
                clearQueue();
                $('.music-item').each(function (i, el) {
                    addToQueue(
                        $(this).data("id"),
                        $(this).data("title"),
                        $(this).data("audio"),
                        $(this).data("thumbnail"));
                }).promise().done(function () {
                    playQueue(_currentQueue[0].id);
                });
                return false;
            });
            $('.edit-button').click(function () {
                $('#musicId').val($(this).closest('.music-item').data('id'));
                $('#musicTitle').val($(this).closest('.music-item').data('title'));
                $('#musicEditor').modal('show');
            });
            $('.add-button').click(function () {
                addToQueue(
                        $(this).closest('.music-item').data("id"),
                        $(this).closest('.music-item').data("title"),
                        $(this).closest('.music-item').data("audio"),
                        $(this).closest('.music-item').data("thumbnail"));
                renderQueue();
            });
            $('.play-button').click(function () {
                var id = $(this).closest('.music-item').data('id');
                var title = $(this).closest('.music-item').data('title');
                var audio = $(this).closest('.music-item').data('audio');
                var thumbnail = $(this).closest('.music-item').data('thumbnail');

                if (id == _currentId) {
                    $('#player .audio')[0].pause();
                    _currentId = "";
                } else {
                    clearQueue();
                    addToQueue(id, title, audio, thumbnail);
                    playQueue(id);
                }

                renderMusicList();
            });

        }

        function playNext() {
            for (i = 0; i < _currentQueue.length  ; i++) {
                if (_currentId == _currentQueue[i].id) {
                    if (i < _currentQueue.length - 1) {
                        playQueue(_currentQueue[i + 1].id);
                    }
                }
            }
        }
        function playPrevious() {
            for (i = 0; i < _currentQueue.length  ; i++) {
                if (_currentId == _currentQueue[i].id) {
                    if (i > 0) {
                        playQueue(_currentQueue[i - 1].id);
                    } else {
                        playQueue(_currentId);
                    }
                }
            }
        }

        function playQueue(id) {
            //console.log('play id: ' + id);
            for (i = 0; i < _currentQueue.length  ; i++) {
                if (_currentQueue[i].id == id) {
                    $('#player .title').text(_currentQueue[i].title);
                    $('#player .audio source').attr("src", _currentQueue[i].audio);
                    $('#player .thumbnail').attr("src", _currentQueue[i].thumbnail);
                    $('#player .audio')[0].load();
                    $('#player .audio')[0].play();
                    _currentId = _currentQueue[i].id;
                }
            }
            renderMusicList();
        }
        function addToQueue(id, title, audio, thumbnail) {
            _currentQueue.push({
                id: id,
                title: title,
                audio: audio,
                thumbnail: thumbnail
            });
        }
        function deleteFromQueue(id) {
            for (i = 0; i < _currentQueue.length  ; i++) {
                if (_currentQueue[i].id == id) {
                    _currentQueue.pop(_currentQueue[i]);
                }
            }
        }
        function updateFromQueue(id, title) {
            for (i = 0; i < _currentQueue.length  ; i++) {
                if (_currentQueue[i].id == id) {
                    _currentQueue[i].title = title;
                }
            }
        }
        function clearQueue() {
            _currentQueue = [];
        }


    </script>

    <div id="musicEditor" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Edit music</h4>
                </div>
                <div class="modal-body">
                    <input id="musicId" type="hidden" value="" />
                    <div class="form-group">
                        <label for="title">Title</label>
                        <input id="musicTitle" name="title" class="form-control" type="text" />
                    </div>

                    <a href="#" id="musicDelete" class="btn btn-danger">Delete this music</a>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Close</a>
                    <a href="#" id="musicUpdate" class="btn btn-primary">Save changes</a>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->


    <div id="playlistCreator" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Save playlist</h4>
                </div>
                <div class="modal-body">
                    <input id="musicId" type="hidden" value="" />
                    <div class="form-group">
                        <label for="title">Title</label>
                        <input id="playlistTitle" name="title" class="form-control" type="text" />
                    </div>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Close</a>
                    <a href="#" id="playlistSave" class="btn btn-primary">Save playlist</a>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</body>
</html>
